group "me.glorantq.modbot"

repositories {
    mavenCentral()
    mavenLocal()

    maven { url "https://oss.sonatype.org/content/groups/public/" }
    maven { url 'https://jitpack.io' }
    maven { url  "https://dl.bintray.com/dv8fromtheworld/maven" }
}

apply plugin: "java"
apply plugin: "idea"

sourceCompatibility = 1.8
version = "1.1-SNAPSHOT"

ext {
    discord4j_version = "dev-SNAPSHOT"
    logbackVersion = "1.2.3"
    jansiVersion = "1.16"
    guice_version = "4.0"
}

dependencies {
    compile "com.github.Discord4J:Discord4J:$discord4j_version"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "org.fusesource.jansi:jansi:$jansiVersion"
    compile "com.google.inject:guice:$guice_version"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

def mavenCredentials = new Properties()
file("maven.properties").withInputStream { mavenCredentials.load(it) }

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'modbot-api'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'ModBot API'
                description = 'API to create modules for ModBot'
                url = 'https://glorantq.me/'
                developers {
                    developer {
                        id = 'glorantq'
                        name = 'Gerber Lóránt Viktor'
                        email = 'glorantq@gmail.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username mavenCredentials.username
                password mavenCredentials.password
            }

            def releasesRepoUrl = "https://repo.glorantq.me/repository/maven-releases/"
            def snapshotsRepoUrl = "https://repo.glorantq.me/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html4', true)
    }
}